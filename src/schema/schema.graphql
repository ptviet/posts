type ResponseMessage {
  message: String
}

type User {
  _id: ID
  username: String!
  email: String!
  password: String!
  permission: String
  avatar: String
  joinDate: String
  favorites: [Post]
}

type AuthResponse {
  _id: ID
  username: String
  email: String
  permission: String
  avatar: String
  joinDate: String
  favorites: [Post]
}

type Post {
  _id: ID
  title: String!
  imageUrl: String!
  categories: [Category]!
  description: String!
  createdDate: String
  likes: Int
  createdBy: User!
  messages: [Message]
}

type Pagination {
  posts: [Post]
  hasMore: Boolean
}

type Category {
  _id: ID
  name: String!
  description: String
  createdDate: String
  createdBy: User!
}

type Message {
  _id: ID
  messageBody: String!
  messageDate: String
  messageUser: User!
}

type Query {
  currentUser: AuthResponse
  categories: [Category]!
  posts: [Post]!
  infiniteScrollPosts(pageNumber: Int!, pageSize: Int!): Pagination
}

type Mutation {
  signin(username: String!, password: String!): AuthResponse!
  signout: ResponseMessage
  signup(username: String!, email: String!, password: String!): AuthResponse!
  addCategory(name: String!, description: String): Category!
  addPost(
    title: String!
    imageUrl: String!
    categories: [String]!
    description: String!
  ): Post!
}
